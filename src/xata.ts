// Generated by Xata Codegen 0.29.1. Please do not edit.
import { buildClient } from '@xata.io/client'
import type { BaseClientOptions, SchemaInference, XataRecord } from '@xata.io/client'

const tables = [
    {
        name: 'survey',
        columns: [
            { name: 'question_id', type: 'string', notNull: true, defaultValue: '0' },
            { name: 'answer', type: 'string', notNull: true, defaultValue: 'null' },
            { name: 'recommendations', type: 'text' },
        ],
    },
] as const

export type SchemaTables = typeof tables
export type InferredTypes = SchemaInference<SchemaTables>

export type Survey = InferredTypes['survey']
export type SurveyRecord = Survey & XataRecord

export type DatabaseSchema = {
    survey: SurveyRecord
}

const DatabaseClient = buildClient()

const defaultOptions = {
    databaseURL: 'https://carincon93-s-workspace-p2ulc7.us-east-1.xata.sh/db/boowe',
}

export class XataClient extends DatabaseClient<DatabaseSchema> {
    constructor(options?: BaseClientOptions) {
        super({ ...defaultOptions, ...options }, tables)
    }
}

let instance: XataClient | undefined = undefined

export const getXataClient = () => {
    if (instance) return instance

    instance = new XataClient()
    return instance
}
